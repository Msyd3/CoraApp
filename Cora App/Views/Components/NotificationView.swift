//
//  NotificationView.swift
//  Cora
//
//  Created by Mohammed Alsayed on 08/04/2025.
//

import SwiftUI

struct NotificationView: View {
    @ObservedObject var manager = NotificationManager.shared
    
    var body: some View {
        ScrollView {
            
            Text("Ø§Ù„Ø¥Ø´Ø¹Ø§Ø±Ø§Øª")
                .customFont(size: 24, weight: "Rubik-Bold")
                .frame(maxWidth: .infinity, alignment: .leading)
                .padding(.horizontal)
                .padding(.top, 40)

            if manager.notifications.isEmpty {
                Text("Ù„Ø§ ØªÙˆØ¬Ø¯ Ø¥Ø´Ø¹Ø§Ø±Ø§Øª Ø­Ø§Ù„ÙŠØ§Ù‹")
                    .customFont(size: 18, weight: "Rubik-Bold")
                    .foregroundColor(.gray)
                    .frame(maxWidth: .infinity, alignment: .center)
                    .padding(.top, 50)
            } else {
                VStack(spacing: 16) {
                    ForEach(manager.notifications) { notification in
                        VStack(alignment: .leading, spacing: 4) {
                            Text(notification.title)
                                .customFont(size: 18, weight: "Rubik-Bold")
                                .foregroundColor(Color("Bur"))
                            
                            Text(notification.message)
                                .customFont(size: 12, weight: "Rubik-Medium")
                                .foregroundColor(.gray)
                            
                            Text(notification.date.formatted(date: .abbreviated, time: .shortened))
                                .font(.caption)
                                .foregroundColor(.secondary)
                        }
                        .frame(maxWidth: .infinity, alignment: .leading)
                        .padding()
                        .background(Color.gray.opacity(0.05))
                        .cornerRadius(12)
                    }
                }
                .padding(.horizontal)
                .padding(.top, 16)
            }
        }
        

        .navigationTitle("Ø§Ù„Ø¥Ø´Ø¹Ø§Ø±Ø§Øª")
        .onAppear {
            if manager.notifications.isEmpty {
                manager.addNotification(title: "Ù…Ø±Ø­Ø¨Ø§Ù‹ Ø¨Ùƒ ðŸ‘‹", message: "Ù‡Ø°Ø§ Ù…Ø«Ø§Ù„ Ø¹Ù„Ù‰ Ø¥Ø´Ø¹Ø§Ø± Ø¯Ø§Ø®Ù„ Ø§Ù„ØªØ·Ø¨ÙŠÙ‚.")
            }
        }
    }
}

#Preview {
    NotificationPreviewWrapper()
}

struct NotificationPreviewWrapper: View {
    @StateObject private var mockManager = NotificationManager.shared
    
    var body: some View {
        NotificationView()
            .onAppear {
                mockManager.notifications = [
                    CoraNotification(title: "Ù…Ø±Ø­Ø¨Ø§Ù‹ Ø¨Ùƒ", message: "Ù‡Ø°Ø§ Ø¥Ø´Ø¹Ø§Ø± ØªØ¬Ø±ÙŠØ¨ÙŠ Ù¡"),
                    CoraNotification(title: "Ø·Ù„Ø¨ Ø¬Ø¯ÙŠØ¯", message: "ØªÙ… Ø¥Ø±Ø³Ø§Ù„ Ø·Ù„Ø¨Ùƒ Ø¨Ù†Ø¬Ø§Ø­"),
                    CoraNotification(title: "ØªÙ†Ø¨ÙŠÙ‡", message: "Ù„Ø§ ØªÙ†Ø³ÙŽ ØªØ­Ø¯ÙŠØ« Ø¨ÙŠØ§Ù†Ø§ØªÙƒ")
                ]
            }
    }
}
